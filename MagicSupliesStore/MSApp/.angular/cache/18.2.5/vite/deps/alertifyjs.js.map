{
  "version": 3,
  "sources": ["../../../../../node_modules/alertifyjs/build/alertify.js"],
  "sourcesContent": ["/**\r\n * alertifyjs 1.14.0 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2024 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\n(function (window) {\n  'use strict';\n\n  var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\n  /**\r\n   * Keys enum\r\n   * @type {Object}\r\n   */\n  var keys = {\n    ENTER: 13,\n    ESC: 27,\n    F1: 112,\n    F12: 123,\n    LEFT: 37,\n    RIGHT: 39,\n    TAB: 9\n  };\n  /**\r\n   * Default options \r\n   * @type {Object}\r\n   */\n  var defaults = {\n    autoReset: true,\n    basic: false,\n    closable: true,\n    closableByDimmer: true,\n    invokeOnCloseOff: false,\n    frameless: false,\n    defaultFocusOff: false,\n    maintainFocus: true,\n    //global default not per instance, applies to all dialogs\n    maximizable: true,\n    modal: true,\n    movable: true,\n    moveBounded: false,\n    overflow: true,\n    padding: true,\n    pinnable: true,\n    pinned: true,\n    preventBodyShift: false,\n    //global default not per instance, applies to all dialogs\n    resizable: true,\n    startMaximized: false,\n    transition: 'pulse',\n    transitionOff: false,\n    tabbable: ['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])' + NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET + ','),\n    //global\n    notifier: {\n      delay: 5,\n      position: 'bottom-right',\n      closeButton: false,\n      classes: {\n        base: 'alertify-notifier',\n        prefix: 'ajs-',\n        message: 'ajs-message',\n        top: 'ajs-top',\n        right: 'ajs-right',\n        bottom: 'ajs-bottom',\n        left: 'ajs-left',\n        center: 'ajs-center',\n        visible: 'ajs-visible',\n        hidden: 'ajs-hidden',\n        close: 'ajs-close'\n      }\n    },\n    glossary: {\n      title: 'AlertifyJS',\n      ok: 'OK',\n      cancel: 'Cancel',\n      acccpt: 'Accept',\n      deny: 'Deny',\n      confirm: 'Confirm',\n      decline: 'Decline',\n      close: 'Close',\n      maximize: 'Maximize',\n      restore: 'Restore'\n    },\n    theme: {\n      input: 'ajs-input',\n      ok: 'ajs-ok',\n      cancel: 'ajs-cancel'\n    },\n    hooks: {\n      preinit: function () {},\n      postinit: function () {}\n    }\n  };\n\n  //holds open dialogs instances\n  var openDialogs = [];\n\n  /**\r\n   * [Helper]  Adds the specified class(es) to the element.\r\n   *\r\n   * @element {node}      The element\r\n   * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n   * \r\n   * @return {undefined}\r\n   */\n  function addClass(element, classNames) {\n    element.className += ' ' + classNames;\n  }\n\n  /**\r\n   * [Helper]  Removes the specified class(es) from the element.\r\n   *\r\n   * @element {node}      The element\r\n   * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n   * \r\n   * @return {undefined}\r\n   */\n  function removeClass(element, classNames) {\n    var original = element.className.split(' ');\n    var toBeRemoved = classNames.split(' ');\n    for (var x = 0; x < toBeRemoved.length; x += 1) {\n      var index = original.indexOf(toBeRemoved[x]);\n      if (index > -1) {\n        original.splice(index, 1);\n      }\n    }\n    element.className = original.join(' ');\n  }\n\n  /**\r\n   * [Helper]  Checks if the document is RTL\r\n   *\r\n   * @return {Boolean} True if the document is RTL, false otherwise.\r\n   */\n  function isRightToLeft() {\n    return window.getComputedStyle(document.body).direction === 'rtl';\n  }\n  /**\r\n   * [Helper]  Get the document current scrollTop\r\n   *\r\n   * @return {Number} current document scrollTop value\r\n   */\n  function getScrollTop() {\n    return document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n  }\n\n  /**\r\n   * [Helper]  Get the document current scrollLeft\r\n   *\r\n   * @return {Number} current document scrollLeft value\r\n   */\n  function getScrollLeft() {\n    return document.documentElement && document.documentElement.scrollLeft || document.body.scrollLeft;\n  }\n\n  /**\r\n  * Helper: clear contents\r\n  *\r\n  */\n  function clearContents(element) {\n    while (element.lastChild) {\n      element.removeChild(element.lastChild);\n    }\n  }\n\n  /**\r\n   * detects strings, checks for both string and String instances\r\n   * this is unlike typeof(x) === 'string' which only accepts primitive strings\r\n   *\r\n   */\n  function isString(thing) {\n    return Object.prototype.toString.call(thing) === '[object String]';\n  }\n\n  /**\r\n   * Extends a given prototype by merging properties from base into sub.\r\n   *\r\n   * @sub {Object} sub The prototype being overwritten.\r\n   * @base {Object} base The prototype being written.\r\n   *\r\n   * @return {Object} The extended prototype.\r\n   */\n  function copy(src) {\n    if (null === src) {\n      return src;\n    }\n    var cpy;\n    if (Array.isArray(src)) {\n      cpy = [];\n      for (var x = 0; x < src.length; x += 1) {\n        cpy.push(copy(src[x]));\n      }\n      return cpy;\n    }\n    if (src instanceof Date) {\n      return new Date(src.getTime());\n    }\n    if (src instanceof RegExp) {\n      cpy = new RegExp(src.source);\n      cpy.global = src.global;\n      cpy.ignoreCase = src.ignoreCase;\n      cpy.multiline = src.multiline;\n      cpy.lastIndex = src.lastIndex;\n      return cpy;\n    }\n    if (typeof src === 'object') {\n      cpy = {};\n      // copy dialog pototype over definition.\n      for (var prop in src) {\n        if (src.hasOwnProperty(prop)) {\n          cpy[prop] = copy(src[prop]);\n        }\n      }\n      return cpy;\n    }\n    return src;\n  }\n  /**\r\n    * Helper: destruct the dialog\r\n    *\r\n    */\n  function destruct(instance, initialize) {\n    if (instance.elements) {\n      //delete the dom and it's references.\n      var root = instance.elements.root;\n      root.parentNode.removeChild(root);\n      delete instance.elements;\n      //copy back initial settings.\n      instance.settings = copy(instance.__settings);\n      //re-reference init function.\n      instance.__init = initialize;\n      //delete __internal variable to allow re-initialization.\n      delete instance.__internal;\n    }\n  }\n\n  /**\r\n   * Test to check if passive event listeners are supported.\r\n   */\n  var IsPassiveSupported = false;\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        IsPassiveSupported = true;\n      }\n    });\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (e) {}\n\n  /**\r\n  * Removes an event listener\r\n  *\r\n  * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n  * @param {string} event The event type to listen for.\r\n  * @param {Function} handler The function to handle the event.\r\n  * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n  * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n  */\n  var on = function (el, event, fn, useCapture, passive) {\n    el.addEventListener(event, fn, IsPassiveSupported ? {\n      capture: useCapture,\n      passive: passive\n    } : useCapture === true);\n  };\n\n  /**\r\n   * Removes an event listener\r\n   *\r\n   * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n   * @param {string} event The event type to remove.\r\n   * @param {Function} fn The event handler to remove.\r\n   * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n   * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n   */\n  var off = function (el, event, fn, useCapture, passive) {\n    el.removeEventListener(event, fn, IsPassiveSupported ? {\n      capture: useCapture,\n      passive: passive\n    } : useCapture === true);\n  };\n\n  /**\r\n   * Prevent default event from firing\r\n   *\r\n   * @param  {Event} event Event object\r\n   * @return {undefined}\r\n    function prevent ( event ) {\r\n      if ( event ) {\r\n          if ( event.preventDefault ) {\r\n              event.preventDefault();\r\n          } else {\r\n              event.returnValue = false;\r\n          }\r\n      }\r\n  }\r\n  */\n  var transition = function () {\n    var t, type;\n    var supported = false;\n    var transitions = {\n      'animation': 'animationend',\n      'OAnimation': 'oAnimationEnd oanimationend',\n      'msAnimation': 'MSAnimationEnd',\n      'MozAnimation': 'animationend',\n      'WebkitAnimation': 'webkitAnimationEnd'\n    };\n    for (t in transitions) {\n      if (document.documentElement.style[t] !== undefined) {\n        type = transitions[t];\n        supported = true;\n        break;\n      }\n    }\n    return {\n      type: type,\n      supported: supported\n    };\n  }();\n\n  /**\r\n  * Creates event handler delegate that sends the instance as last argument.\r\n  * \r\n  * @return {Function}    a function wrapper which sends the instance as last argument.\r\n  */\n  function delegate(context, method) {\n    return function () {\n      if (arguments.length > 0) {\n        var args = [];\n        for (var x = 0; x < arguments.length; x += 1) {\n          args.push(arguments[x]);\n        }\n        args.push(context);\n        return method.apply(context, args);\n      }\n      return method.apply(context, [null, context]);\n    };\n  }\n  /**\r\n  * Helper for creating a dialog close event.\r\n  * \r\n  * @return {object}\r\n  */\n  function createCloseEvent(index, button) {\n    return {\n      index: index,\n      button: button,\n      cancel: false\n    };\n  }\n  /**\r\n  * Helper for dispatching events.\r\n  *\r\n  * @param  {string} evenType The type of the event to disptach.\r\n  * @param  {object} instance The dialog instance disptaching the event.\r\n  *\r\n  * @return   {any}   The result of the invoked function.\r\n  */\n  function dispatchEvent(eventType, instance) {\n    if (typeof instance.get(eventType) === 'function') {\n      return instance.get(eventType).call(instance);\n    }\n  }\n\n  /**\r\n   * Super class for all dialogs\r\n   *\r\n   * @return {Object}\t\tbase dialog prototype\r\n   */\n  var dialog = function () {\n    var\n      //holds the list of used keys.\n      usedKeys = [],\n      //dummy variable, used to trigger dom reflow.\n      reflow = null,\n      //holds body tab index in case it has any.\n      tabindex = false,\n      //condition for detecting safari\n      isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\n      //dialog building blocks\n      templates = {\n        dimmer: '<div class=\"ajs-dimmer\"></div>',\n        /*tab index required to fire click event before body focus*/\n        modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\n        dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\n        reset: '<button class=\"ajs-reset\"></button>',\n        commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\n        header: '<div class=\"ajs-header\"></div>',\n        body: '<div class=\"ajs-body\"></div>',\n        content: '<div class=\"ajs-content\"></div>',\n        footer: '<div class=\"ajs-footer\"></div>',\n        buttons: {\n          primary: '<div class=\"ajs-primary ajs-buttons\"></div>',\n          auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>'\n        },\n        button: '<button class=\"ajs-button\"></button>',\n        resizeHandle: '<div class=\"ajs-handle\"></div>'\n      },\n      //common class names\n      classes = {\n        animationIn: 'ajs-in',\n        animationOut: 'ajs-out',\n        base: 'alertify',\n        basic: 'ajs-basic',\n        capture: 'ajs-capture',\n        closable: 'ajs-closable',\n        fixed: 'ajs-fixed',\n        frameless: 'ajs-frameless',\n        hidden: 'ajs-hidden',\n        maximize: 'ajs-maximize',\n        maximized: 'ajs-maximized',\n        maximizable: 'ajs-maximizable',\n        modeless: 'ajs-modeless',\n        movable: 'ajs-movable',\n        noSelection: 'ajs-no-selection',\n        noOverflow: 'ajs-no-overflow',\n        noPadding: 'ajs-no-padding',\n        pin: 'ajs-pin',\n        pinnable: 'ajs-pinnable',\n        prefix: 'ajs-',\n        resizable: 'ajs-resizable',\n        restore: 'ajs-restore',\n        shake: 'ajs-shake',\n        unpinned: 'ajs-unpinned',\n        noTransition: 'ajs-no-transition'\n      };\n\n    /**\r\n     * Helper: initializes the dialog instance\r\n     * \r\n     * @return\t{Number}\tThe total count of currently open modals.\r\n     */\n    function initialize(instance) {\n      if (!instance.__internal) {\n        //invoke preinit global hook\n        alertify.defaults.hooks.preinit(instance);\n        //no need to expose init after this.\n        delete instance.__init;\n\n        //keep a copy of initial dialog settings\n        if (!instance.__settings) {\n          instance.__settings = copy(instance.settings);\n        }\n\n        //get dialog buttons/focus setup\n        var setup;\n        if (typeof instance.setup === 'function') {\n          setup = instance.setup();\n          setup.options = setup.options || {};\n          setup.focus = setup.focus || {};\n        } else {\n          setup = {\n            buttons: [],\n            focus: {\n              element: null,\n              select: false\n            },\n            options: {}\n          };\n        }\n\n        //initialize hooks object.\n        if (typeof instance.hooks !== 'object') {\n          instance.hooks = {};\n        }\n\n        //copy buttons defintion\n        var buttonsDefinition = [];\n        if (Array.isArray(setup.buttons)) {\n          for (var b = 0; b < setup.buttons.length; b += 1) {\n            var ref = setup.buttons[b],\n              cpy = {};\n            for (var i in ref) {\n              if (ref.hasOwnProperty(i)) {\n                cpy[i] = ref[i];\n              }\n            }\n            buttonsDefinition.push(cpy);\n          }\n        }\n        var internal = instance.__internal = {\n          /**\r\n           * Flag holding the open state of the dialog\r\n           * \r\n           * @type {Boolean}\r\n           */\n          isOpen: false,\n          /**\r\n           * Active element is the element that will receive focus after\r\n           * closing the dialog. It defaults as the body tag, but gets updated\r\n           * to the last focused element before the dialog was opened.\r\n           *\r\n           * @type {Node}\r\n           */\n          activeElement: document.body,\n          timerIn: undefined,\n          timerOut: undefined,\n          buttons: buttonsDefinition,\n          focus: setup.focus,\n          options: {\n            title: undefined,\n            modal: undefined,\n            basic: undefined,\n            frameless: undefined,\n            defaultFocusOff: undefined,\n            pinned: undefined,\n            movable: undefined,\n            moveBounded: undefined,\n            resizable: undefined,\n            autoReset: undefined,\n            closable: undefined,\n            closableByDimmer: undefined,\n            invokeOnCloseOff: undefined,\n            maximizable: undefined,\n            startMaximized: undefined,\n            pinnable: undefined,\n            transition: undefined,\n            transitionOff: undefined,\n            padding: undefined,\n            overflow: undefined,\n            onshow: undefined,\n            onclosing: undefined,\n            onclose: undefined,\n            onfocus: undefined,\n            onmove: undefined,\n            onmoved: undefined,\n            onresize: undefined,\n            onresized: undefined,\n            onmaximize: undefined,\n            onmaximized: undefined,\n            onrestore: undefined,\n            onrestored: undefined\n          },\n          resetHandler: undefined,\n          beginMoveHandler: undefined,\n          beginResizeHandler: undefined,\n          bringToFrontHandler: undefined,\n          modalClickHandler: undefined,\n          buttonsClickHandler: undefined,\n          commandsClickHandler: undefined,\n          transitionInHandler: undefined,\n          transitionOutHandler: undefined,\n          destroy: undefined\n        };\n        var elements = {};\n        //root node\n        elements.root = document.createElement('div');\n        //prevent FOUC in case of async styles loading.\n        elements.root.style.display = 'none';\n        elements.root.className = classes.base + ' ' + classes.hidden + ' ';\n        elements.root.innerHTML = templates.dimmer + templates.modal;\n\n        //dimmer\n        elements.dimmer = elements.root.firstChild;\n\n        //dialog\n        elements.modal = elements.root.lastChild;\n        elements.modal.innerHTML = templates.dialog;\n        elements.dialog = elements.modal.firstChild;\n        elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\n\n        //reset links\n        elements.reset = [];\n        elements.reset.push(elements.dialog.firstChild);\n        elements.reset.push(elements.dialog.lastChild);\n\n        //commands\n        elements.commands = {};\n        elements.commands.container = elements.reset[0].nextSibling;\n        elements.commands.pin = elements.commands.container.firstChild;\n        elements.commands.maximize = elements.commands.pin.nextSibling;\n        elements.commands.close = elements.commands.maximize.nextSibling;\n\n        //header\n        elements.header = elements.commands.container.nextSibling;\n\n        //body\n        elements.body = elements.header.nextSibling;\n        elements.body.innerHTML = templates.content;\n        elements.content = elements.body.firstChild;\n\n        //footer\n        elements.footer = elements.body.nextSibling;\n        elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\n\n        //resize handle\n        elements.resizeHandle = elements.footer.nextSibling;\n\n        //buttons\n        elements.buttons = {};\n        elements.buttons.auxiliary = elements.footer.firstChild;\n        elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\n        elements.buttons.primary.innerHTML = templates.button;\n        elements.buttonTemplate = elements.buttons.primary.firstChild;\n        //remove button template\n        elements.buttons.primary.removeChild(elements.buttonTemplate);\n        for (var x = 0; x < instance.__internal.buttons.length; x += 1) {\n          var button = instance.__internal.buttons[x];\n\n          // add to the list of used keys.\n          if (usedKeys.indexOf(button.key) < 0) {\n            usedKeys.push(button.key);\n          }\n          button.element = elements.buttonTemplate.cloneNode();\n          button.element.innerHTML = button.text;\n          if (typeof button.className === 'string' && button.className !== '') {\n            addClass(button.element, button.className);\n          }\n          for (var key in button.attrs) {\n            if (key !== 'className' && button.attrs.hasOwnProperty(key)) {\n              button.element.setAttribute(key, button.attrs[key]);\n            }\n          }\n          if (button.scope === 'auxiliary') {\n            elements.buttons.auxiliary.appendChild(button.element);\n          } else {\n            elements.buttons.primary.appendChild(button.element);\n          }\n        }\n        //make elements pubic\n        instance.elements = elements;\n\n        //save event handlers delegates\n        internal.resetHandler = delegate(instance, onReset);\n        internal.beginMoveHandler = delegate(instance, beginMove);\n        internal.beginResizeHandler = delegate(instance, beginResize);\n        internal.bringToFrontHandler = delegate(instance, bringToFront);\n        internal.modalClickHandler = delegate(instance, modalClickHandler);\n        internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\n        internal.commandsClickHandler = delegate(instance, commandsClickHandler);\n        internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\n        internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\n\n        //settings\n        for (var opKey in internal.options) {\n          if (setup.options[opKey] !== undefined) {\n            // if found in user options\n            instance.set(opKey, setup.options[opKey]);\n          } else if (alertify.defaults.hasOwnProperty(opKey)) {\n            // else if found in defaults options\n            instance.set(opKey, alertify.defaults[opKey]);\n          } else if (opKey === 'title') {\n            // else if title key, use alertify.defaults.glossary\n            instance.set(opKey, alertify.defaults.glossary[opKey]);\n          }\n        }\n\n        // allow dom customization\n        if (typeof instance.build === 'function') {\n          instance.build();\n        }\n\n        //invoke postinit global hook\n        alertify.defaults.hooks.postinit(instance);\n      }\n\n      //add to the end of the DOM tree.\n      document.body.appendChild(instance.elements.root);\n    }\n\n    /**\r\n     * Helper: maintains scroll position\r\n     *\r\n     */\n    var scrollX, scrollY;\n    function saveScrollPosition() {\n      scrollX = getScrollLeft();\n      scrollY = getScrollTop();\n    }\n    function restoreScrollPosition() {\n      window.scrollTo(scrollX, scrollY);\n    }\n\n    /**\r\n     * Helper: adds/removes no-overflow class from body\r\n     *\r\n     */\n    function ensureNoOverflow() {\n      var requiresNoOverflow = 0;\n      for (var x = 0; x < openDialogs.length; x += 1) {\n        var instance = openDialogs[x];\n        if (instance.isModal() || instance.isMaximized()) {\n          requiresNoOverflow += 1;\n        }\n      }\n      if (requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0) {\n        //last open modal or last maximized one\n        removeClass(document.body, classes.noOverflow);\n        preventBodyShift(false);\n      } else if (requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0) {\n        //first open modal or first maximized one\n        preventBodyShift(true);\n        addClass(document.body, classes.noOverflow);\n      }\n    }\n    var top = '',\n      topScroll = 0;\n    /**\r\n     * Helper: prevents body shift.\r\n     *\r\n     */\n    function preventBodyShift(add) {\n      if (alertify.defaults.preventBodyShift) {\n        if (add && document.documentElement.scrollHeight > document.documentElement.clientHeight) {\n          //&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\n          topScroll = scrollY;\n          top = window.getComputedStyle(document.body).top;\n          addClass(document.body, classes.fixed);\n          document.body.style.top = -scrollY + 'px';\n        } else if (!add) {\n          scrollY = topScroll;\n          document.body.style.top = top;\n          removeClass(document.body, classes.fixed);\n          restoreScrollPosition();\n        }\n      }\n    }\n\n    /**\r\n     * Sets the name of the transition used to show/hide the dialog\r\n     * \r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     */\n    function updateTransition(instance, value, oldValue) {\n      if (isString(oldValue)) {\n        removeClass(instance.elements.root, classes.prefix + oldValue);\n      }\n      addClass(instance.elements.root, classes.prefix + value);\n      reflow = instance.elements.root.offsetWidth;\n    }\n\n    /**\r\n     * Toggles the dialog no transition \r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateTransitionOff(instance) {\n      if (instance.get('transitionOff')) {\n        // add class\n        addClass(instance.elements.root, classes.noTransition);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.noTransition);\n      }\n    }\n\n    /**\r\n     * Toggles the dialog display mode\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateDisplayMode(instance) {\n      if (instance.get('modal')) {\n        //make modal\n        removeClass(instance.elements.root, classes.modeless);\n\n        //only if open\n        if (instance.isOpen()) {\n          unbindModelessEvents(instance);\n\n          //in case a pinned modless dialog was made modal while open.\n          updateAbsPositionFix(instance);\n          ensureNoOverflow();\n        }\n      } else {\n        //make modelss\n        addClass(instance.elements.root, classes.modeless);\n\n        //only if open\n        if (instance.isOpen()) {\n          bindModelessEvents(instance);\n\n          //in case pin/unpin was called while a modal is open\n          updateAbsPositionFix(instance);\n          ensureNoOverflow();\n        }\n      }\n    }\n\n    /**\r\n     * Toggles the dialog basic view mode \r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateBasicMode(instance) {\n      if (instance.get('basic')) {\n        // add class\n        addClass(instance.elements.root, classes.basic);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.basic);\n      }\n    }\n\n    /**\r\n     * Toggles the dialog frameless view mode \r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateFramelessMode(instance) {\n      if (instance.get('frameless')) {\n        // add class\n        addClass(instance.elements.root, classes.frameless);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.frameless);\n      }\n    }\n\n    /**\r\n     * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n     *\r\n     * @param {Event} event Focus event\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bringToFront(event, instance) {\n      // Do not bring to front if preceeded by an open modal\n      var index = openDialogs.indexOf(instance);\n      for (var x = index + 1; x < openDialogs.length; x += 1) {\n        if (openDialogs[x].isModal()) {\n          return;\n        }\n      }\n\n      // Bring to front by making it the last child.\n      if (document.body.lastChild !== instance.elements.root) {\n        document.body.appendChild(instance.elements.root);\n        //also make sure its at the end of the list\n        openDialogs.splice(openDialogs.indexOf(instance), 1);\n        openDialogs.push(instance);\n        setFocus(instance);\n      }\n      return false;\n    }\n\n    /**\r\n     * Helper: reflects dialogs options updates\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {String} option The updated option name.\r\n     *\r\n     * @return\t{undefined}\t\r\n     */\n    function optionUpdated(instance, option, oldValue, newValue) {\n      switch (option) {\n        case 'title':\n          instance.setHeader(newValue);\n          break;\n        case 'modal':\n          updateDisplayMode(instance);\n          break;\n        case 'basic':\n          updateBasicMode(instance);\n          break;\n        case 'frameless':\n          updateFramelessMode(instance);\n          break;\n        case 'pinned':\n          updatePinned(instance);\n          break;\n        case 'closable':\n          updateClosable(instance);\n          break;\n        case 'maximizable':\n          updateMaximizable(instance);\n          break;\n        case 'pinnable':\n          updatePinnable(instance);\n          break;\n        case 'movable':\n          updateMovable(instance);\n          break;\n        case 'resizable':\n          updateResizable(instance);\n          break;\n        case 'padding':\n          if (newValue) {\n            removeClass(instance.elements.root, classes.noPadding);\n          } else if (instance.elements.root.className.indexOf(classes.noPadding) < 0) {\n            addClass(instance.elements.root, classes.noPadding);\n          }\n          break;\n        case 'overflow':\n          if (newValue) {\n            removeClass(instance.elements.root, classes.noOverflow);\n          } else if (instance.elements.root.className.indexOf(classes.noOverflow) < 0) {\n            addClass(instance.elements.root, classes.noOverflow);\n          }\n          break;\n        case 'transition':\n          updateTransition(instance, newValue, oldValue);\n          break;\n        case 'transitionOff':\n          updateTransitionOff(instance);\n          break;\n      }\n\n      // internal on option updated event\n      if (typeof instance.hooks.onupdate === 'function') {\n        instance.hooks.onupdate.call(instance, option, oldValue, newValue);\n      }\n    }\n\n    /**\r\n     * Helper: reflects dialogs options updates\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Object} obj The object to set/get a value on/from.\r\n     * @param {Function} callback The callback function to call if the key was found.\r\n     * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n     * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n     * @param {String} option The updated option name.\r\n     *\r\n     * @return\t{Object} result object \r\n     *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n     *\t\tGET: \r\n     *\t\t- found: a flag indicating if the key was found or not.\r\n     *\t\t- value: the property value.\r\n     *\t\tSET:\r\n     *\t\t- items: a list of key value pairs of the properties being set.\r\n     *\t\t\t\teach contains:\r\n     *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n     *\t\t\t\t\t- key: the property key.\r\n     *\t\t\t\t\t- value: the property value.\r\n     */\n    function update(instance, obj, callback, key, value) {\n      var result = {\n        op: undefined,\n        items: []\n      };\n      if (typeof value === 'undefined' && typeof key === 'string') {\n        //get\n        result.op = 'get';\n        if (obj.hasOwnProperty(key)) {\n          result.found = true;\n          result.value = obj[key];\n        } else {\n          result.found = false;\n          result.value = undefined;\n        }\n      } else {\n        var old;\n        //set\n        result.op = 'set';\n        if (typeof key === 'object') {\n          //set multiple\n          var args = key;\n          for (var prop in args) {\n            if (obj.hasOwnProperty(prop)) {\n              if (obj[prop] !== args[prop]) {\n                old = obj[prop];\n                obj[prop] = args[prop];\n                callback.call(instance, prop, old, args[prop]);\n              }\n              result.items.push({\n                'key': prop,\n                'value': args[prop],\n                'found': true\n              });\n            } else {\n              result.items.push({\n                'key': prop,\n                'value': args[prop],\n                'found': false\n              });\n            }\n          }\n        } else if (typeof key === 'string') {\n          //set single\n          if (obj.hasOwnProperty(key)) {\n            if (obj[key] !== value) {\n              old = obj[key];\n              obj[key] = value;\n              callback.call(instance, key, old, value);\n            }\n            result.items.push({\n              'key': key,\n              'value': value,\n              'found': true\n            });\n          } else {\n            result.items.push({\n              'key': key,\n              'value': value,\n              'found': false\n            });\n          }\n        } else {\n          //invalid params\n          throw new Error('args must be a string or object');\n        }\n      }\n      return result;\n    }\n\n    /**\r\n     * Triggers a close event.\r\n     *\r\n     * @param {Object} instance\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function triggerClose(instance) {\n      var found;\n      triggerCallback(instance, function (button) {\n        return found = instance.get('invokeOnCloseOff') !== true && button.invokeOnClose === true;\n      });\n      //none of the buttons registered as onclose callback\n      //close the dialog\n      if (!found && instance.isOpen()) {\n        instance.close();\n      }\n    }\n\n    /**\r\n     * Dialogs commands event handler, attached to the dialog commands element.\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Object} instance\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function commandsClickHandler(event, instance) {\n      var target = event.srcElement || event.target;\n      switch (target) {\n        case instance.elements.commands.pin:\n          if (!instance.isPinned()) {\n            pin(instance);\n          } else {\n            unpin(instance);\n          }\n          break;\n        case instance.elements.commands.maximize:\n          if (!instance.isMaximized()) {\n            maximize(instance);\n          } else {\n            restore(instance);\n          }\n          break;\n        case instance.elements.commands.close:\n          triggerClose(instance);\n          break;\n      }\n      return false;\n    }\n\n    /**\r\n     * Helper: pins the modeless dialog.\r\n     *\r\n     * @param {Object} instance\tThe dialog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function pin(instance) {\n      //pin the dialog\n      instance.set('pinned', true);\n    }\n\n    /**\r\n     * Helper: unpins the modeless dialog.\r\n     *\r\n     * @param {Object} instance\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function unpin(instance) {\n      //unpin the dialog \n      instance.set('pinned', false);\n    }\n\n    /**\r\n     * Helper: enlarges the dialog to fill the entire screen.\r\n     *\r\n     * @param {Object} instance\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function maximize(instance) {\n      // allow custom `onmaximize` method\n      dispatchEvent('onmaximize', instance);\n      //maximize the dialog \n      addClass(instance.elements.root, classes.maximized);\n      if (instance.isOpen()) {\n        ensureNoOverflow();\n      }\n      // allow custom `onmaximized` method\n      dispatchEvent('onmaximized', instance);\n    }\n\n    /**\r\n     * Helper: returns the dialog to its former size.\r\n     *\r\n     * @param {Object} instance\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function restore(instance) {\n      // allow custom `onrestore` method\n      dispatchEvent('onrestore', instance);\n      //maximize the dialog \n      removeClass(instance.elements.root, classes.maximized);\n      if (instance.isOpen()) {\n        ensureNoOverflow();\n      }\n      // allow custom `onrestored` method\n      dispatchEvent('onrestored', instance);\n    }\n\n    /**\r\n     * Show or hide the maximize box.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updatePinnable(instance) {\n      if (instance.get('pinnable')) {\n        // add class\n        addClass(instance.elements.root, classes.pinnable);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.pinnable);\n      }\n    }\n\n    /**\r\n     * Helper: Fixes the absolutly positioned modal div position.\r\n     *\r\n     * @param {Object} instance The dialog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function addAbsPositionFix(instance) {\n      var scrollLeft = getScrollLeft();\n      instance.elements.modal.style.marginTop = getScrollTop() + 'px';\n      instance.elements.modal.style.marginLeft = scrollLeft + 'px';\n      instance.elements.modal.style.marginRight = -scrollLeft + 'px';\n    }\n\n    /**\r\n     * Helper: Removes the absolutly positioned modal div position fix.\r\n     *\r\n     * @param {Object} instance The dialog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function removeAbsPositionFix(instance) {\n      var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\n      var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\n      instance.elements.modal.style.marginTop = '';\n      instance.elements.modal.style.marginLeft = '';\n      instance.elements.modal.style.marginRight = '';\n      if (instance.isOpen()) {\n        var top = 0,\n          left = 0;\n        if (instance.elements.dialog.style.top !== '') {\n          top = parseInt(instance.elements.dialog.style.top, 10);\n        }\n        instance.elements.dialog.style.top = top + (marginTop - getScrollTop()) + 'px';\n        if (instance.elements.dialog.style.left !== '') {\n          left = parseInt(instance.elements.dialog.style.left, 10);\n        }\n        instance.elements.dialog.style.left = left + (marginLeft - getScrollLeft()) + 'px';\n      }\n    }\n    /**\r\n     * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n     *\r\n     * @param {Object} instance The dialog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateAbsPositionFix(instance) {\n      // if modeless and unpinned add fix\n      if (!instance.get('modal') && !instance.get('pinned')) {\n        addAbsPositionFix(instance);\n      } else {\n        removeAbsPositionFix(instance);\n      }\n    }\n    /**\r\n     * Toggles the dialog position lock | modeless only.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to make it modal, false otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updatePinned(instance) {\n      if (instance.get('pinned')) {\n        removeClass(instance.elements.root, classes.unpinned);\n        if (instance.isOpen()) {\n          removeAbsPositionFix(instance);\n        }\n      } else {\n        addClass(instance.elements.root, classes.unpinned);\n        if (instance.isOpen() && !instance.isModal()) {\n          addAbsPositionFix(instance);\n        }\n      }\n    }\n\n    /**\r\n     * Show or hide the maximize box.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateMaximizable(instance) {\n      if (instance.get('maximizable')) {\n        // add class\n        addClass(instance.elements.root, classes.maximizable);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.maximizable);\n      }\n    }\n\n    /**\r\n     * Show or hide the close box.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateClosable(instance) {\n      if (instance.get('closable')) {\n        // add class\n        addClass(instance.elements.root, classes.closable);\n        bindClosableEvents(instance);\n      } else {\n        // remove class\n        removeClass(instance.elements.root, classes.closable);\n        unbindClosableEvents(instance);\n      }\n    }\n    var cancelClick = false,\n      // flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\n      modalClickHandlerTS = 0 // stores last click timestamp to prevent executing the handler twice on double click.\n    ;\n\n    /**\r\n     * Helper: closes the modal dialog when clicking the modal\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function modalClickHandler(event, instance) {\n      if (event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick) {\n        var target = event.srcElement || event.target;\n        if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\n          triggerClose(instance);\n        }\n      }\n      cancelClick = false;\n    }\n\n    // stores last call timestamp to prevent triggering the callback twice.\n    var callbackTS = 0;\n    // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\n    var cancelKeyup = false;\n    /** \r\n     * Helper: triggers a button callback\r\n     *\r\n     * @param {Object}\t\tThe dilog instance.\r\n     * @param {Function}\tCallback to check which button triggered the event.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function triggerCallback(instance, check) {\n      if (Date.now() - callbackTS > 200 && (callbackTS = Date.now())) {\n        for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\n          var button = instance.__internal.buttons[idx];\n          if (!button.element.disabled && check(button)) {\n            var closeEvent = createCloseEvent(idx, button);\n            if (typeof instance.callback === 'function') {\n              instance.callback.apply(instance, [closeEvent]);\n            }\n            //close the dialog only if not canceled.\n            if (closeEvent.cancel === false) {\n              instance.close();\n            }\n            break;\n          }\n        }\n      }\n    }\n\n    /**\r\n     * Clicks event handler, attached to the dialog footer.\r\n     *\r\n     * @param {Event}\t\tDOM event object.\r\n     * @param {Object}\t\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function buttonsClickHandler(event, instance) {\n      var target = event.srcElement || event.target;\n      triggerCallback(instance, function (button) {\n        // if this button caused the click, cancel keyup event\n        return button.element.contains(target) && (cancelKeyup = true);\n      });\n    }\n\n    /**\r\n     * Keyup event handler, attached to the document.body\r\n     *\r\n     * @param {Event}\t\tDOM event object.\r\n     * @param {Object}\t\tThe dilog instance.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function keyupHandler(event) {\n      //hitting enter while button has focus will trigger keyup too.\n      //ignore if handled by clickHandler\n      if (cancelKeyup) {\n        cancelKeyup = false;\n        return;\n      }\n      var instance = openDialogs[openDialogs.length - 1];\n      var keyCode = event.keyCode;\n      if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\n        triggerClose(instance);\n        return false;\n      } else if (usedKeys.indexOf(keyCode) > -1) {\n        triggerCallback(instance, function (button) {\n          return button.key === keyCode;\n        });\n        return false;\n      }\n    }\n    /**\r\n    * Keydown event handler, attached to the document.body\r\n    *\r\n    * @param {Event}\t\tDOM event object.\r\n    * @param {Object}\t\tThe dilog instance.\r\n    * \r\n    * @return {undefined}\r\n    */\n    function keydownHandler(event) {\n      var instance = openDialogs[openDialogs.length - 1];\n      var keyCode = event.keyCode;\n      if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\n        var buttons = instance.__internal.buttons;\n        for (var x = 0; x < buttons.length; x += 1) {\n          if (document.activeElement === buttons[x].element) {\n            switch (keyCode) {\n              case keys.LEFT:\n                buttons[(x || buttons.length) - 1].element.focus();\n                return;\n              case keys.RIGHT:\n                buttons[(x + 1) % buttons.length].element.focus();\n                return;\n            }\n          }\n        }\n      } else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\n        event.preventDefault();\n        event.stopPropagation();\n        triggerCallback(instance, function (button) {\n          return button.key === keyCode;\n        });\n        return false;\n      }\n    }\n\n    /**\r\n     * Sets focus to proper dialog element\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function setFocus(instance, resetTarget) {\n      // reset target has already been determined.\n      if (resetTarget) {\n        resetTarget.focus();\n      } else {\n        // current instance focus settings\n        var focus = instance.__internal.focus;\n        // the focus element.\n        var element = focus.element;\n        switch (typeof focus.element) {\n          // a number means a button index\n          case 'number':\n            if (instance.__internal.buttons.length > focus.element) {\n              //in basic view, skip focusing the buttons.\n              if (instance.get('basic') === true) {\n                element = instance.elements.reset[0];\n              } else {\n                element = instance.__internal.buttons[focus.element].element;\n              }\n            }\n            break;\n          // a string means querySelector to select from dialog body contents.\n          case 'string':\n            element = instance.elements.body.querySelector(focus.element);\n            break;\n          // a function should return the focus element.\n          case 'function':\n            element = focus.element.call(instance);\n            break;\n        }\n\n        // if no focus element, default to first reset element.\n        if (instance.get('defaultFocusOff') === true || (typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0) {\n          element = instance.elements.reset[0];\n        }\n        // focus\n        if (element && element.focus) {\n          element.focus();\n          // if selectable\n          if (focus.select && element.select) {\n            element.select();\n          }\n        }\n      }\n    }\n\n    /**\r\n     * Focus event handler, attached to document.body and dialogs own reset links.\r\n     * handles the focus for modal dialogs only.\r\n     *\r\n     * @param {Event} event DOM focus event object.\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function onReset(event, instance) {\n      // should work on last modal if triggered from document.body \n      if (!instance) {\n        for (var x = openDialogs.length - 1; x > -1; x -= 1) {\n          if (openDialogs[x].isModal()) {\n            instance = openDialogs[x];\n            break;\n          }\n        }\n      }\n      if (instance) {\n        // if modal\n        if (instance.isModal()) {\n          // determine reset target to enable forward/backward tab cycle.\n          var firstReset = instance.elements.reset[0],\n            lastReset = instance.elements.reset[1],\n            lastFocusedElement = event.relatedTarget,\n            within = instance.elements.root.contains(lastFocusedElement),\n            target = event.srcElement || event.target,\n            resetTarget;\n\n          //if the previous focused element element was outside the modal do nthing\n          if ( /*first show */\n          target === firstReset && !within || ( /*focus cycle */\n          target === lastReset && lastFocusedElement === firstReset)) {\n            return;\n          } else if (target === lastReset || target === document.body) {\n            resetTarget = firstReset;\n          } else if (target === firstReset && lastFocusedElement === lastReset) {\n            resetTarget = findTabbable(instance);\n          } else if (target === firstReset && within) {\n            resetTarget = findTabbable(instance, true);\n          }\n          // focus\n          setFocus(instance, resetTarget);\n        }\n      }\n    }\n    function findTabbable(instance, last) {\n      var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\n      if (last) {\n        tabbables.reverse();\n      }\n      for (var x = 0; x < tabbables.length; x += 1) {\n        var tabbable = tabbables[x];\n        //check if visible\n        if (!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)) {\n          return tabbable;\n        }\n      }\n    }\n    function recycleTab(event) {\n      var instance = openDialogs[openDialogs.length - 1];\n      if (instance && event.shiftKey && event.keyCode === keys.TAB) {\n        instance.elements.reset[1].focus();\n      }\n    }\n    /**\r\n     * Transition in transitionend event handler. \r\n     *\r\n     * @param {Event}\t\tTransitionEnd event object.\r\n     * @param {Object}\t\tThe dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function handleTransitionInEvent(event, instance) {\n      // clear the timer\n      clearTimeout(instance.__internal.timerIn);\n\n      // once transition is complete, set focus\n      setFocus(instance);\n\n      // allow handling key up after transition ended.\n      cancelKeyup = false;\n\n      // allow custom `onfocus` method\n      dispatchEvent('onfocus', instance);\n\n      // unbind the event\n      off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n      removeClass(instance.elements.root, classes.animationIn);\n    }\n\n    /**\r\n     * Transition out transitionend event handler. \r\n     *\r\n     * @param {Event}\t\tTransitionEnd event object.\r\n     * @param {Object}\t\tThe dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function handleTransitionOutEvent(event, instance) {\n      // clear the timer\n      clearTimeout(instance.__internal.timerOut);\n      // unbind the event\n      off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n\n      // reset move updates\n      resetMove(instance);\n      // reset resize updates\n      resetResize(instance);\n\n      // restore if maximized\n      if (instance.isMaximized() && !instance.get('startMaximized')) {\n        restore(instance);\n      }\n\n      //destory the instance\n      if (typeof instance.__internal.destroy === 'function') {\n        instance.__internal.destroy.apply(instance);\n      }\n    }\n    /* Controls moving a dialog around */\n    //holde the current moving instance\n    var movable = null,\n      //holds the current X offset when move starts\n      offsetX = 0,\n      //holds the current Y offset when move starts\n      offsetY = 0,\n      xProp = 'pageX',\n      yProp = 'pageY',\n      bounds = null,\n      refreshTop = false,\n      moveDelegate = null;\n\n    /**\r\n     * Helper: sets the element top/left coordinates\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Node} element The element being moved.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function moveElement(event, element) {\n      var left = event[xProp] - offsetX,\n        top = event[yProp] - offsetY;\n      if (refreshTop) {\n        top -= document.body.scrollTop;\n      }\n      element.style.left = left + 'px';\n      element.style.top = top + 'px';\n    }\n    /**\r\n     * Helper: sets the element top/left coordinates within screen bounds\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Node} element The element being moved.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function moveElementBounded(event, element) {\n      var left = event[xProp] - offsetX,\n        top = event[yProp] - offsetY;\n      if (refreshTop) {\n        top -= document.body.scrollTop;\n      }\n      element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\n      if (refreshTop) {\n        element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\n      } else {\n        element.style.top = Math.max(bounds.minTop, top) + 'px';\n      }\n    }\n\n    /**\r\n     * Triggers the start of a move event, attached to the header element mouse down event.\r\n     * Adds no-selection class to the body, disabling selection while moving.\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Object} instance The dilog instance.\r\n     * \r\n     * @return {Boolean} false\r\n     */\n    function beginMove(event, instance) {\n      if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\n        var eventSrc,\n          left = 0,\n          top = 0;\n        if (event.type === 'touchstart') {\n          event.preventDefault();\n          eventSrc = event.targetTouches[0];\n          xProp = 'clientX';\n          yProp = 'clientY';\n        } else if (event.button === 0) {\n          eventSrc = event;\n        }\n        if (eventSrc) {\n          var element = instance.elements.dialog;\n          addClass(element, classes.capture);\n          if (element.style.left) {\n            left = parseInt(element.style.left, 10);\n          }\n          if (element.style.top) {\n            top = parseInt(element.style.top, 10);\n          }\n          offsetX = eventSrc[xProp] - left;\n          offsetY = eventSrc[yProp] - top;\n          if (instance.isModal()) {\n            offsetY += instance.elements.modal.scrollTop;\n          } else if (instance.isPinned()) {\n            offsetY -= document.body.scrollTop;\n          }\n          if (instance.get('moveBounded')) {\n            var current = element,\n              offsetLeft = -left,\n              offsetTop = -top;\n\n            //calc offset\n            do {\n              offsetLeft += current.offsetLeft;\n              offsetTop += current.offsetTop;\n            } while (current = current.offsetParent);\n            bounds = {\n              maxLeft: offsetLeft,\n              minLeft: -offsetLeft,\n              maxTop: document.documentElement.clientHeight - element.clientHeight - offsetTop,\n              minTop: -offsetTop\n            };\n            moveDelegate = moveElementBounded;\n          } else {\n            bounds = null;\n            moveDelegate = moveElement;\n          }\n\n          // allow custom `onmove` method\n          dispatchEvent('onmove', instance);\n          refreshTop = !instance.isModal() && instance.isPinned();\n          movable = instance;\n          moveDelegate(eventSrc, element);\n          addClass(document.body, classes.noSelection);\n          return false;\n        }\n      }\n    }\n\n    /**\r\n     * The actual move handler,  attached to document.body mousemove event.\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function move(event) {\n      if (movable) {\n        var eventSrc;\n        if (event.type === 'touchmove') {\n          event.preventDefault();\n          eventSrc = event.targetTouches[0];\n        } else if (event.button === 0) {\n          eventSrc = event;\n        }\n        if (eventSrc) {\n          moveDelegate(eventSrc, movable.elements.dialog);\n        }\n      }\n    }\n\n    /**\r\n     * Triggers the end of a move event,  attached to document.body mouseup event.\r\n     * Removes no-selection class from document.body, allowing selection.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function endMove() {\n      if (movable) {\n        var instance = movable;\n        movable = bounds = null;\n        removeClass(document.body, classes.noSelection);\n        removeClass(instance.elements.dialog, classes.capture);\n        // allow custom `onmoved` method\n        dispatchEvent('onmoved', instance);\n      }\n    }\n\n    /**\r\n     * Resets any changes made by moving the element to its original state,\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function resetMove(instance) {\n      movable = null;\n      var element = instance.elements.dialog;\n      element.style.left = element.style.top = '';\n    }\n\n    /**\r\n     * Updates the dialog move behavior.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateMovable(instance) {\n      if (instance.get('movable')) {\n        // add class\n        addClass(instance.elements.root, classes.movable);\n        if (instance.isOpen()) {\n          bindMovableEvents(instance);\n        }\n      } else {\n        //reset\n        resetMove(instance);\n        // remove class\n        removeClass(instance.elements.root, classes.movable);\n        if (instance.isOpen()) {\n          unbindMovableEvents(instance);\n        }\n      }\n    }\n\n    /* Controls moving a dialog around */\n    //holde the current instance being resized\t\t\n    var resizable = null,\n      //holds the staring left offset when resize starts.\n      startingLeft = Number.Nan,\n      //holds the staring width when resize starts.\n      startingWidth = 0,\n      //holds the initial width when resized for the first time.\n      minWidth = 0,\n      //holds the offset of the resize handle.\n      handleOffset = 0;\n\n    /**\r\n     * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n     *\r\n     * @param {Event} event\tDOM mousemove event object.\r\n     * @param {Node} element The element being moved.\r\n     * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function resizeElement(event, element, pageRelative) {\n      //calculate offsets from 0,0\n      var current = element;\n      var offsetLeft = 0;\n      var offsetTop = 0;\n      do {\n        offsetLeft += current.offsetLeft;\n        offsetTop += current.offsetTop;\n      } while (current = current.offsetParent);\n\n      // determine X,Y coordinates.\n      var X, Y;\n      if (pageRelative === true) {\n        X = event.pageX;\n        Y = event.pageY;\n      } else {\n        X = event.clientX;\n        Y = event.clientY;\n      }\n      // rtl handling\n      var isRTL = isRightToLeft();\n      if (isRTL) {\n        // reverse X \n        X = document.body.offsetWidth - X;\n        // if has a starting left, calculate offsetRight\n        if (!isNaN(startingLeft)) {\n          offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\n        }\n      }\n\n      // set width/height\n      element.style.height = Y - offsetTop + handleOffset + 'px';\n      element.style.width = X - offsetLeft + handleOffset + 'px';\n\n      // if the element being resized has a starting left, maintain it.\n      // the dialog is centered, divide by half the offset to maintain the margins.\n      if (!isNaN(startingLeft)) {\n        var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\n        if (isRTL) {\n          //negate the diff, why?\n          //when growing it should decrease left\n          //when shrinking it should increase left\n          diff *= -1;\n        }\n        if (element.offsetWidth > startingWidth) {\n          //growing\n          element.style.left = startingLeft + diff + 'px';\n        } else if (element.offsetWidth >= minWidth) {\n          //shrinking\n          element.style.left = startingLeft - diff + 'px';\n        }\n      }\n    }\n\n    /**\r\n     * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n     * Adds no-selection class to the body, disabling selection while moving.\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * @param {Object} instance The dilog instance.\r\n     * \r\n     * @return {Boolean} false\r\n     */\n    function beginResize(event, instance) {\n      if (!instance.isMaximized()) {\n        var eventSrc;\n        if (event.type === 'touchstart') {\n          event.preventDefault();\n          eventSrc = event.targetTouches[0];\n        } else if (event.button === 0) {\n          eventSrc = event;\n        }\n        if (eventSrc) {\n          // allow custom `onresize` method\n          dispatchEvent('onresize', instance);\n          resizable = instance;\n          handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\n          var element = instance.elements.dialog;\n          addClass(element, classes.capture);\n          startingLeft = parseInt(element.style.left, 10);\n          element.style.height = element.offsetHeight + 'px';\n          element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\n          element.style.width = (startingWidth = element.offsetWidth) + 'px';\n          if (element.style.maxWidth !== 'none') {\n            element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\n          }\n          element.style.maxWidth = 'none';\n          addClass(document.body, classes.noSelection);\n          return false;\n        }\n      }\n    }\n\n    /**\r\n     * The actual resize handler,  attached to document.body mousemove event.\r\n     *\r\n     * @param {Event} event\tDOM event object.\r\n     * \r\n     * @return {undefined}\r\n     */\n    function resize(event) {\n      if (resizable) {\n        var eventSrc;\n        if (event.type === 'touchmove') {\n          event.preventDefault();\n          eventSrc = event.targetTouches[0];\n        } else if (event.button === 0) {\n          eventSrc = event;\n        }\n        if (eventSrc) {\n          resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\n        }\n      }\n    }\n\n    /**\r\n     * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n     * Removes no-selection class from document.body, allowing selection.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function endResize() {\n      if (resizable) {\n        var instance = resizable;\n        resizable = null;\n        removeClass(document.body, classes.noSelection);\n        removeClass(instance.elements.dialog, classes.capture);\n        cancelClick = true;\n        // allow custom `onresized` method\n        dispatchEvent('onresized', instance);\n      }\n    }\n\n    /**\r\n     * Resets any changes made by resizing the element to its original state.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function resetResize(instance) {\n      resizable = null;\n      var element = instance.elements.dialog;\n      if (element.style.maxWidth === 'none') {\n        //clear inline styles.\n        element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\n        //reset variables.\n        startingLeft = Number.Nan;\n        startingWidth = minWidth = handleOffset = 0;\n      }\n    }\n\n    /**\r\n     * Updates the dialog move behavior.\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function updateResizable(instance) {\n      if (instance.get('resizable')) {\n        // add class\n        addClass(instance.elements.root, classes.resizable);\n        if (instance.isOpen()) {\n          bindResizableEvents(instance);\n        }\n      } else {\n        //reset\n        resetResize(instance);\n        // remove class\n        removeClass(instance.elements.root, classes.resizable);\n        if (instance.isOpen()) {\n          unbindResizableEvents(instance);\n        }\n      }\n    }\n\n    /**\r\n     * Reset move/resize on window resize.\r\n     *\r\n     * @param {Event} event\twindow resize event object.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function windowResize( /*event*/\n    ) {\n      for (var x = 0; x < openDialogs.length; x += 1) {\n        var instance = openDialogs[x];\n        if (instance.get('autoReset')) {\n          resetMove(instance);\n          resetResize(instance);\n        }\n      }\n    }\n    /**\r\n     * Bind dialogs events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bindEvents(instance) {\n      // if first dialog, hook global handlers\n      if (openDialogs.length === 1) {\n        //global\n        on(window, 'resize', windowResize);\n        on(document.body, 'keyup', keyupHandler);\n        on(document.body, 'keydown', keydownHandler);\n        on(document.body, 'focus', onReset);\n\n        //move\n        on(document.documentElement, 'mousemove', move);\n        on(document.documentElement, 'touchmove', move, false, false);\n        on(document.documentElement, 'mouseup', endMove);\n        on(document.documentElement, 'touchend', endMove);\n        //resize\n        on(document.documentElement, 'mousemove', resize);\n        on(document.documentElement, 'touchmove', resize, false, false);\n        on(document.documentElement, 'mouseup', endResize);\n        on(document.documentElement, 'touchend', endResize);\n      }\n\n      // common events\n      on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\n      on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\n      on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\n      on(instance.elements.reset[0], 'keydown', recycleTab);\n      on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\n\n      //prevent handling key up when dialog is being opened by a key stroke.\n      cancelKeyup = true;\n      // hook in transition handler\n      on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n\n      // modelss only events\n      if (!instance.get('modal')) {\n        bindModelessEvents(instance);\n      }\n\n      // resizable\n      if (instance.get('resizable')) {\n        bindResizableEvents(instance);\n      }\n\n      // movable\n      if (instance.get('movable')) {\n        bindMovableEvents(instance);\n      }\n    }\n\n    /**\r\n     * Unbind dialogs events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function unbindEvents(instance) {\n      // if last dialog, remove global handlers\n      if (openDialogs.length === 1) {\n        //global\n        off(window, 'resize', windowResize);\n        off(document.body, 'keyup', keyupHandler);\n        off(document.body, 'keydown', keydownHandler);\n        off(document.body, 'focus', onReset);\n        //move\n        off(document.documentElement, 'mousemove', move);\n        off(document.documentElement, 'mouseup', endMove);\n        //resize\n        off(document.documentElement, 'mousemove', resize);\n        off(document.documentElement, 'mouseup', endResize);\n      }\n\n      // common events\n      off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\n      off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\n      off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\n      off(instance.elements.reset[0], 'keydown', recycleTab);\n      off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\n\n      // hook out transition handler\n      on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n\n      // modelss only events\n      if (!instance.get('modal')) {\n        unbindModelessEvents(instance);\n      }\n\n      // movable\n      if (instance.get('movable')) {\n        unbindMovableEvents(instance);\n      }\n\n      // resizable\n      if (instance.get('resizable')) {\n        unbindResizableEvents(instance);\n      }\n    }\n\n    /**\r\n     * Bind modeless specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bindModelessEvents(instance) {\n      on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\n    }\n\n    /**\r\n     * Unbind modeless specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function unbindModelessEvents(instance) {\n      off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\n    }\n\n    /**\r\n     * Bind movable specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bindMovableEvents(instance) {\n      on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\n      on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\n    }\n\n    /**\r\n     * Unbind movable specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function unbindMovableEvents(instance) {\n      off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\n      off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\n    }\n\n    /**\r\n     * Bind resizable specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bindResizableEvents(instance) {\n      on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\n      on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\n    }\n\n    /**\r\n     * Unbind resizable specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function unbindResizableEvents(instance) {\n      off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\n      off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\n    }\n\n    /**\r\n     * Bind closable events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function bindClosableEvents(instance) {\n      on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\n    }\n\n    /**\r\n     * Unbind closable specific events\r\n     *\r\n     * @param {Object} instance The dilog instance.\r\n     *\r\n     * @return {undefined}\r\n     */\n    function unbindClosableEvents(instance) {\n      off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\n    }\n    // dialog API\n    return {\n      __init: initialize,\n      /**\r\n       * Check if dialog is currently open\r\n       *\r\n       * @return {Boolean}\r\n       */\n      isOpen: function () {\n        return this.__internal.isOpen;\n      },\n      isModal: function () {\n        return this.elements.root.className.indexOf(classes.modeless) < 0;\n      },\n      isMaximized: function () {\n        return this.elements.root.className.indexOf(classes.maximized) > -1;\n      },\n      isPinned: function () {\n        return this.elements.root.className.indexOf(classes.unpinned) < 0;\n      },\n      maximize: function () {\n        if (!this.isMaximized()) {\n          maximize(this);\n        }\n        return this;\n      },\n      restore: function () {\n        if (this.isMaximized()) {\n          restore(this);\n        }\n        return this;\n      },\n      pin: function () {\n        if (!this.isPinned()) {\n          pin(this);\n        }\n        return this;\n      },\n      unpin: function () {\n        if (this.isPinned()) {\n          unpin(this);\n        }\n        return this;\n      },\n      bringToFront: function () {\n        bringToFront(null, this);\n        return this;\n      },\n      /**\r\n       * Move the dialog to a specific x/y coordinates\r\n       *\r\n       * @param {Number} x    The new dialog x coordinate in pixels.\r\n       * @param {Number} y    The new dialog y coordinate in pixels.\r\n       *\r\n       * @return {Object} The dialog instance.\r\n       */\n      moveTo: function (x, y) {\n        if (!isNaN(x) && !isNaN(y)) {\n          // allow custom `onmove` method\n          dispatchEvent('onmove', this);\n          var element = this.elements.dialog,\n            current = element,\n            offsetLeft = 0,\n            offsetTop = 0;\n\n          //subtract existing left,top\n          if (element.style.left) {\n            offsetLeft -= parseInt(element.style.left, 10);\n          }\n          if (element.style.top) {\n            offsetTop -= parseInt(element.style.top, 10);\n          }\n          //calc offset\n          do {\n            offsetLeft += current.offsetLeft;\n            offsetTop += current.offsetTop;\n          } while (current = current.offsetParent);\n\n          //calc left, top\n          var left = x - offsetLeft;\n          var top = y - offsetTop;\n\n          //// rtl handling\n          if (isRightToLeft()) {\n            left *= -1;\n          }\n          element.style.left = left + 'px';\n          element.style.top = top + 'px';\n\n          // allow custom `onmoved` method\n          dispatchEvent('onmoved', this);\n        }\n        return this;\n      },\n      /**\r\n       * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n       * The dialog can be resized to:\r\n       *  A minimum width equal to the initial display width\r\n       *  A minimum height equal to the sum of header/footer heights.\r\n       *\r\n       *\r\n       * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n       * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n       *\r\n       * @return {Object} The dialog instance.\r\n       */\n      resizeTo: function (width, height) {\n        var w = parseFloat(width),\n          h = parseFloat(height),\n          regex = /(\\d*\\.\\d+|\\d+)%/;\n        if (!isNaN(w) && !isNaN(h) && this.get('resizable') === true) {\n          // allow custom `onresize` method\n          dispatchEvent('onresize', this);\n          if (('' + width).match(regex)) {\n            w = w / 100 * document.documentElement.clientWidth;\n          }\n          if (('' + height).match(regex)) {\n            h = h / 100 * document.documentElement.clientHeight;\n          }\n          var element = this.elements.dialog;\n          if (element.style.maxWidth !== 'none') {\n            element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\n          }\n          element.style.maxWidth = 'none';\n          element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\n          element.style.width = w + 'px';\n          element.style.height = h + 'px';\n\n          // allow custom `onresized` method\n          dispatchEvent('onresized', this);\n        }\n        return this;\n      },\n      /**\r\n       * Gets or Sets dialog settings/options \r\n       *\r\n       * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n       * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n       *\r\n       * @return {undefined}\r\n       */\n      setting: function (key, value) {\n        var self = this;\n        var result = update(this, this.__internal.options, function (k, o, n) {\n          optionUpdated(self, k, o, n);\n        }, key, value);\n        if (result.op === 'get') {\n          if (result.found) {\n            return result.value;\n          } else if (typeof this.settings !== 'undefined') {\n            return update(this, this.settings, this.settingUpdated || function () {}, key, value).value;\n          } else {\n            return undefined;\n          }\n        } else if (result.op === 'set') {\n          if (result.items.length > 0) {\n            var callback = this.settingUpdated || function () {};\n            for (var x = 0; x < result.items.length; x += 1) {\n              var item = result.items[x];\n              if (!item.found && typeof this.settings !== 'undefined') {\n                update(this, this.settings, callback, item.key, item.value);\n              }\n            }\n          }\n          return this;\n        }\n      },\n      /**\r\n       * [Alias] Sets dialog settings/options \r\n       */\n      set: function (key, value) {\n        this.setting(key, value);\n        return this;\n      },\n      /**\r\n       * [Alias] Gets dialog settings/options \r\n       */\n      get: function (key) {\n        return this.setting(key);\n      },\n      /**\r\n      * Sets dialog header\r\n      * @content {string or element}\r\n      *\r\n      * @return {undefined}\r\n      */\n      setHeader: function (content) {\n        if (isString(content)) {\n          clearContents(this.elements.header);\n          this.elements.header.innerHTML = content;\n        } else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content) {\n          clearContents(this.elements.header);\n          this.elements.header.appendChild(content);\n        }\n        return this;\n      },\n      /**\r\n      * Sets dialog contents\r\n      * @content {string or element}\r\n      *\r\n      * @return {undefined}\r\n      */\n      setContent: function (content) {\n        if (isString(content)) {\n          clearContents(this.elements.content);\n          this.elements.content.innerHTML = content;\n        } else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content) {\n          clearContents(this.elements.content);\n          this.elements.content.appendChild(content);\n        }\n        return this;\n      },\n      /**\r\n       * Show the dialog as modal\r\n       *\r\n       * @return {Object} the dialog instance.\r\n       */\n      showModal: function (className) {\n        return this.show(true, className);\n      },\n      /**\r\n       * Show the dialog\r\n       *\r\n       * @return {Object} the dialog instance.\r\n       */\n      show: function (modal, className) {\n        // ensure initialization\n        initialize(this);\n        if (!this.__internal.isOpen) {\n          // add to open dialogs\n          this.__internal.isOpen = true;\n          openDialogs.push(this);\n\n          // save last focused element\n          if (alertify.defaults.maintainFocus) {\n            this.__internal.activeElement = document.activeElement;\n          }\n\n          // set tabindex attribute on body element this allows script to give it focusable\n          if (!document.body.hasAttribute('tabindex')) {\n            document.body.setAttribute('tabindex', tabindex = '0');\n          }\n\n          //allow custom dom manipulation updates before showing the dialog.\n          if (typeof this.prepare === 'function') {\n            this.prepare();\n          }\n          bindEvents(this);\n          if (modal !== undefined) {\n            this.set('modal', modal);\n          }\n\n          //save scroll to prevent document jump\n          saveScrollPosition();\n          ensureNoOverflow();\n\n          // allow custom dialog class on show\n          if (typeof className === 'string' && className !== '') {\n            this.__internal.className = className;\n            addClass(this.elements.root, className);\n          }\n\n          // maximize if start maximized\n          if (this.get('startMaximized')) {\n            this.maximize();\n          } else if (this.isMaximized()) {\n            restore(this);\n          }\n          updateAbsPositionFix(this);\n          this.elements.root.removeAttribute('style');\n          removeClass(this.elements.root, classes.animationOut);\n          addClass(this.elements.root, classes.animationIn);\n\n          // set 1s fallback in case transition event doesn't fire\n          clearTimeout(this.__internal.timerIn);\n          this.__internal.timerIn = setTimeout(this.__internal.transitionInHandler, transition.supported ? 1000 : 100);\n          if (isSafari) {\n            // force desktop safari reflow\n            var root = this.elements.root;\n            root.style.display = 'none';\n            setTimeout(function () {\n              root.style.display = 'block';\n            }, 0);\n          }\n\n          //reflow\n          reflow = this.elements.root.offsetWidth;\n\n          // show dialog\n          removeClass(this.elements.root, classes.hidden);\n\n          //restore scroll to prevent document jump\n          restoreScrollPosition();\n\n          // internal on show event\n          if (typeof this.hooks.onshow === 'function') {\n            this.hooks.onshow.call(this);\n          }\n\n          // allow custom `onshow` method\n          dispatchEvent('onshow', this);\n        } else {\n          // reset move updates\n          resetMove(this);\n          // reset resize updates\n          resetResize(this);\n          // shake the dialog to indicate its already open\n          addClass(this.elements.dialog, classes.shake);\n          var self = this;\n          setTimeout(function () {\n            removeClass(self.elements.dialog, classes.shake);\n          }, 200);\n        }\n        return this;\n      },\n      /**\r\n       * Close the dialog\r\n       *\r\n       * @return {Object} The dialog instance\r\n       */\n      close: function () {\n        if (this.__internal.isOpen) {\n          // custom `onclosing` event\n          if (dispatchEvent('onclosing', this) !== false) {\n            unbindEvents(this);\n            removeClass(this.elements.root, classes.animationIn);\n            addClass(this.elements.root, classes.animationOut);\n\n            // set 1s fallback in case transition event doesn't fire\n            clearTimeout(this.__internal.timerOut);\n            this.__internal.timerOut = setTimeout(this.__internal.transitionOutHandler, transition.supported ? 1000 : 100);\n            // hide dialog\n            addClass(this.elements.root, classes.hidden);\n            //reflow\n            reflow = this.elements.modal.offsetWidth;\n\n            // return focus to the last active element\n            if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\n              this.__internal.activeElement.focus();\n              this.__internal.activeElement = null;\n            }\n\n            // remove custom dialog class on hide\n            if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\n              removeClass(this.elements.root, this.__internal.className);\n            }\n\n            // internal on close event\n            if (typeof this.hooks.onclose === 'function') {\n              this.hooks.onclose.call(this);\n            }\n\n            // allow custom `onclose` method\n            dispatchEvent('onclose', this);\n\n            //remove from open dialogs\n            openDialogs.splice(openDialogs.indexOf(this), 1);\n            this.__internal.isOpen = false;\n            ensureNoOverflow();\n          }\n        }\n        // last dialog and tab index was set by us, remove it.\n        if (!openDialogs.length && tabindex === '0') {\n          document.body.removeAttribute('tabindex');\n        }\n        return this;\n      },\n      /**\r\n       * Close all open dialogs except this.\r\n       *\r\n       * @return {undefined}\r\n       */\n      closeOthers: function () {\n        alertify.closeAll(this);\n        return this;\n      },\n      /**\r\n       * Destroys this dialog instance\r\n       *\r\n       * @return {undefined}\r\n       */\n      destroy: function () {\n        if (this.__internal) {\n          if (this.__internal.isOpen) {\n            //mark dialog for destruction, this will be called on tranistionOut event.\n            this.__internal.destroy = function () {\n              destruct(this, initialize);\n            };\n            //close the dialog to unbind all events.\n            this.close();\n          } else if (!this.__internal.destroy) {\n            destruct(this, initialize);\n          }\n        }\n        return this;\n      }\n    };\n  }();\n  var notifier = function () {\n    var reflow,\n      element,\n      openInstances = [],\n      classes = defaults.notifier.classes,\n      baseClass = classes.base;\n    /**\r\n     * Helper: initializes the notifier instance\r\n     *\r\n     */\n    function initialize(instance) {\n      if (!instance.__internal) {\n        instance.__internal = {\n          position: alertify.defaults.notifier.position,\n          delay: alertify.defaults.notifier.delay\n        };\n        element = document.createElement('DIV');\n        var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\n        if (transitionOff) {\n          baseClass = classes.base + ' ajs-no-transition';\n        }\n        updatePosition(instance);\n      }\n\n      //add to DOM tree.\n      if (element.parentNode !== document.body) {\n        document.body.appendChild(element);\n      }\n    }\n    function pushInstance(instance) {\n      instance.__internal.pushed = true;\n      openInstances.push(instance);\n    }\n    function popInstance(instance) {\n      openInstances.splice(openInstances.indexOf(instance), 1);\n      instance.__internal.pushed = false;\n    }\n    /**\r\n     * Helper: update the notifier instance position\r\n     *\r\n     */\n    function updatePosition(instance) {\n      element.className = baseClass;\n      switch (instance.__internal.position) {\n        case 'top-right':\n          addClass(element, classes.top + ' ' + classes.right);\n          break;\n        case 'top-left':\n          addClass(element, classes.top + ' ' + classes.left);\n          break;\n        case 'top-center':\n          addClass(element, classes.top + ' ' + classes.center);\n          break;\n        case 'bottom-left':\n          addClass(element, classes.bottom + ' ' + classes.left);\n          break;\n        case 'bottom-center':\n          addClass(element, classes.bottom + ' ' + classes.center);\n          break;\n        default:\n        case 'bottom-right':\n          addClass(element, classes.bottom + ' ' + classes.right);\n          break;\n      }\n    }\n\n    /**\r\n    * creates a new notification message\r\n    *\r\n    * @param  {DOMElement} message\tThe notifier message element\r\n    * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n    * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n    *\r\n    * @return {undefined}\r\n    */\n    function create(div, callback) {\n      function clickDelegate(event, instance) {\n        if (!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true') {\n          instance.dismiss(true);\n        }\n      }\n      function transitionDone(event, instance) {\n        // unbind event\n        off(instance.element, transition.type, transitionDone);\n        // remove the message\n        element.removeChild(instance.element);\n      }\n      function initialize(instance) {\n        if (!instance.__internal) {\n          instance.__internal = {\n            pushed: false,\n            delay: undefined,\n            timer: undefined,\n            clickHandler: undefined,\n            transitionEndHandler: undefined,\n            transitionTimeout: undefined\n          };\n          instance.__internal.clickHandler = delegate(instance, clickDelegate);\n          instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\n        }\n        return instance;\n      }\n      function clearTimers(instance) {\n        clearTimeout(instance.__internal.timer);\n        clearTimeout(instance.__internal.transitionTimeout);\n      }\n      return initialize({\n        /* notification DOM element*/\n        element: div,\n        /*\r\n         * Pushes a notification message\r\n         * @param {string or DOMElement} content The notification message content\r\n         * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n         *\r\n         */\n        push: function (_content, _wait) {\n          if (!this.__internal.pushed) {\n            pushInstance(this);\n            clearTimers(this);\n            var content, wait;\n            switch (arguments.length) {\n              case 0:\n                wait = this.__internal.delay;\n                break;\n              case 1:\n                if (typeof _content === 'number') {\n                  wait = _content;\n                } else {\n                  content = _content;\n                  wait = this.__internal.delay;\n                }\n                break;\n              case 2:\n                content = _content;\n                wait = _wait;\n                break;\n            }\n            this.__internal.closeButton = alertify.defaults.notifier.closeButton;\n            // set contents\n            if (typeof content !== 'undefined') {\n              this.setContent(content);\n            }\n            // append or insert\n            if (notifier.__internal.position.indexOf('top') < 0) {\n              element.appendChild(this.element);\n            } else {\n              element.insertBefore(this.element, element.firstChild);\n            }\n            reflow = this.element.offsetWidth;\n            addClass(this.element, classes.visible);\n            // attach click event\n            on(this.element, 'click', this.__internal.clickHandler);\n            return this.delay(wait);\n          }\n          return this;\n        },\n        /*\r\n         * {Function} callback function to be invoked before dismissing the notification message.\r\n         * Remarks: A return value === 'false' will cancel the dismissal\r\n         *\r\n         */\n        ondismiss: function () {},\n        /*\r\n         * {Function} callback function to be invoked when the message is dismissed.\r\n         *\r\n         */\n        callback: callback,\n        /*\r\n         * Dismisses the notification message\r\n         * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n         *\r\n         */\n        dismiss: function (clicked) {\n          if (this.__internal.pushed) {\n            clearTimers(this);\n            if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\n              //detach click event\n              off(this.element, 'click', this.__internal.clickHandler);\n              // ensure element exists\n              if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\n                //transition end or fallback\n                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\n                removeClass(this.element, classes.visible);\n\n                // custom callback on dismiss\n                if (typeof this.callback === 'function') {\n                  this.callback.call(this, clicked);\n                }\n              }\n              popInstance(this);\n            }\n          }\n          return this;\n        },\n        /*\r\n         * Delays the notification message dismissal\r\n         * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n         *\r\n         */\n        delay: function (wait) {\n          clearTimers(this);\n          this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\n          if (this.__internal.delay > 0) {\n            var self = this;\n            this.__internal.timer = setTimeout(function () {\n              self.dismiss();\n            }, this.__internal.delay * 1000);\n          }\n          return this;\n        },\n        /*\r\n         * Sets the notification message contents\r\n         * @param {string or DOMElement} content The notification message content\r\n         *\r\n         */\n        setContent: function (content) {\n          if (isString(content)) {\n            clearContents(this.element);\n            this.element.innerHTML = content;\n          } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\n            clearContents(this.element);\n            this.element.appendChild(content);\n          }\n          if (this.__internal.closeButton) {\n            var close = document.createElement('span');\n            addClass(close, classes.close);\n            close.setAttribute('data-close', true);\n            this.element.appendChild(close);\n          }\n          return this;\n        },\n        /*\r\n         * Dismisses all open notifications except this.\r\n         *\r\n         */\n        dismissOthers: function () {\n          notifier.dismissAll(this);\n          return this;\n        }\n      });\n    }\n\n    //notifier api\n    return {\n      /**\r\n       * Gets or Sets notifier settings.\r\n       *\r\n       * @param {string} key The setting name\r\n       * @param {Variant} value The setting value.\r\n       *\r\n       * @return {Object}\tif the called as a setter, return the notifier instance.\r\n       */\n      setting: function (key, value) {\n        //ensure init\n        initialize(this);\n        if (typeof value === 'undefined') {\n          //get\n          return this.__internal[key];\n        } else {\n          //set\n          switch (key) {\n            case 'position':\n              this.__internal.position = value;\n              updatePosition(this);\n              break;\n            case 'delay':\n              this.__internal.delay = value;\n              break;\n          }\n        }\n        return this;\n      },\n      /**\r\n       * [Alias] Sets dialog settings/options\r\n       */\n      set: function (key, value) {\n        this.setting(key, value);\n        return this;\n      },\n      /**\r\n       * [Alias] Gets dialog settings/options\r\n       */\n      get: function (key) {\n        return this.setting(key);\n      },\n      /**\r\n       * Creates a new notification message\r\n       *\r\n       * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n       * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n       *\r\n       * @return {undefined}\r\n       */\n      create: function (type, callback) {\n        //ensure notifier init\n        initialize(this);\n        //create new notification message\n        var div = document.createElement('div');\n        div.className = classes.message + (typeof type === 'string' && type !== '' ? ' ' + classes.prefix + type : '');\n        return create(div, callback);\n      },\n      /**\r\n       * Dismisses all open notifications.\r\n       *\r\n       * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n       *\r\n       */\n      dismissAll: function (except) {\n        var clone = openInstances.slice(0);\n        for (var x = 0; x < clone.length; x += 1) {\n          var instance = clone[x];\n          if (except === undefined || except !== instance) {\n            instance.dismiss();\n          }\n        }\n      }\n    };\n  }();\n\n  /**\r\n   * Alertify public API\r\n   * This contains everything that is exposed through the alertify object.\r\n   *\r\n   * @return {Object}\r\n   */\n  function Alertify() {\n    // holds a references of created dialogs\n    var dialogs = {};\n\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\n    function extend(sub, base) {\n      // copy dialog pototype over definition.\n      for (var prop in base) {\n        if (base.hasOwnProperty(prop)) {\n          sub[prop] = base[prop];\n        }\n      }\n      return sub;\n    }\n\n    /**\r\n    * Helper: returns a dialog instance from saved dialogs.\r\n    * and initializes the dialog if its not already initialized.\r\n    *\r\n    * @name {String} name The dialog name.\r\n    *\r\n    * @return {Object} The dialog instance.\r\n    */\n    function get_dialog(name) {\n      var dialog = dialogs[name].dialog;\n      //initialize the dialog if its not already initialized.\n      if (dialog && typeof dialog.__init === 'function') {\n        dialog.__init(dialog);\n      }\n      return dialog;\n    }\n\n    /**\r\n     * Helper:  registers a new dialog definition.\r\n     *\r\n     * @name {String} name The dialog name.\r\n     * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n     * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n     * @base {String} base the name of another dialog to inherit from.\r\n     *\r\n     * @return {Object} The dialog definition.\r\n     */\n    function register(name, Factory, transient, base) {\n      var definition = {\n        dialog: null,\n        factory: Factory\n      };\n\n      //if this is based on an existing dialog, create a new definition\n      //by applying the new protoype over the existing one.\n      if (base !== undefined) {\n        definition.factory = function () {\n          return extend(new dialogs[base].factory(), new Factory());\n        };\n      }\n      if (!transient) {\n        //create a new definition based on dialog\n        definition.dialog = extend(new definition.factory(), dialog);\n      }\n      return dialogs[name] = definition;\n    }\n    return {\n      /**\r\n       * Alertify defaults\r\n       * \r\n       * @type {Object}\r\n       */\n      defaults: defaults,\n      /**\r\n       * Dialogs factory \r\n       *\r\n       * @param {string}      Dialog name.\r\n       * @param {Function}    A Dialog factory function.\r\n       * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n       * @param {String}      The name of the base type to inherit from.\r\n       */\n      dialog: function (name, Factory, transient, base) {\n        // get request, create a new instance and return it.\n        if (typeof Factory !== 'function') {\n          return get_dialog(name);\n        }\n        if (this.hasOwnProperty(name)) {\n          throw new Error('alertify.dialog: name already exists');\n        }\n\n        // register the dialog\n        var definition = register(name, Factory, transient, base);\n        if (transient) {\n          // make it public\n          this[name] = function () {\n            //if passed with no params, consider it a get request\n            if (arguments.length === 0) {\n              return definition.dialog;\n            } else {\n              var instance = extend(new definition.factory(), dialog);\n              //ensure init\n              if (instance && typeof instance.__init === 'function') {\n                instance.__init(instance);\n              }\n              instance['main'].apply(instance, arguments);\n              return instance['show'].apply(instance);\n            }\n          };\n        } else {\n          // make it public\n          this[name] = function () {\n            //ensure init\n            if (definition.dialog && typeof definition.dialog.__init === 'function') {\n              definition.dialog.__init(definition.dialog);\n            }\n            //if passed with no params, consider it a get request\n            if (arguments.length === 0) {\n              return definition.dialog;\n            } else {\n              var dialog = definition.dialog;\n              dialog['main'].apply(definition.dialog, arguments);\n              return dialog['show'].apply(definition.dialog);\n            }\n          };\n        }\n      },\n      /**\r\n       * Close all open dialogs.\r\n       *\r\n       * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n       *\r\n       * @return {undefined}\r\n       */\n      closeAll: function (except) {\n        var clone = openDialogs.slice(0);\n        for (var x = 0; x < clone.length; x += 1) {\n          var instance = clone[x];\n          if (except === undefined || except !== instance) {\n            instance.close();\n          }\n        }\n      },\n      /**\r\n       * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n       *\r\n       * @param {string} name The dialog name.\r\n       * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n       * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n       *\r\n       * @return {undefined}\r\n       */\n      setting: function (name, key, value) {\n        if (name === 'notifier') {\n          return notifier.setting(key, value);\n        }\n        var dialog = get_dialog(name);\n        if (dialog) {\n          return dialog.setting(key, value);\n        }\n      },\n      /**\r\n       * [Alias] Sets dialog settings/options \r\n       */\n      set: function (name, key, value) {\n        return this.setting(name, key, value);\n      },\n      /**\r\n       * [Alias] Gets dialog settings/options \r\n       */\n      get: function (name, key) {\n        return this.setting(name, key);\n      },\n      /**\r\n       * Creates a new notification message.\r\n       * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n       * This allows for custom look and feel for various types of notifications.\r\n       *\r\n       * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n       * @param  {String}                 [type='']\t\t\t\tType of log message\r\n       * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n       * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n       *\r\n       * @return {Object} Notification object.\r\n       */\n      notify: function (message, type, wait, callback) {\n        return notifier.create(type, callback).push(message, wait);\n      },\n      /**\r\n       * Creates a new notification message.\r\n       *\r\n       * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n       * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n       * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n       *\r\n       * @return {Object} Notification object.\r\n       */\n      message: function (message, wait, callback) {\n        return notifier.create(null, callback).push(message, wait);\n      },\n      /**\r\n       * Creates a new notification message of type 'success'.\r\n       *\r\n       * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n       * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n       * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n       *\r\n       * @return {Object} Notification object.\r\n       */\n      success: function (message, wait, callback) {\n        return notifier.create('success', callback).push(message, wait);\n      },\n      /**\r\n       * Creates a new notification message of type 'error'.\r\n       *\r\n       * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n       * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n       * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n       *\r\n       * @return {Object} Notification object.\r\n       */\n      error: function (message, wait, callback) {\n        return notifier.create('error', callback).push(message, wait);\n      },\n      /**\r\n       * Creates a new notification message of type 'warning'.\r\n       *\r\n       * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n       * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n       * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n       *\r\n       * @return {Object} Notification object.\r\n       */\n      warning: function (message, wait, callback) {\n        return notifier.create('warning', callback).push(message, wait);\n      },\n      /**\r\n       * Dismisses all open notifications\r\n       *\r\n       * @return {undefined}\r\n       */\n      dismissAll: function () {\n        notifier.dismissAll();\n      }\n    };\n  }\n  var alertify = new Alertify();\n\n  /**\r\n  * Alert dialog definition\r\n  *\r\n  * invoked by:\r\n  *\talertify.alert(message);\r\n  *\talertify.alert(title, message);\r\n  *\talertify.alert(message, onok);\r\n  *\talertify.alert(title, message, onok);\r\n   */\n  alertify.dialog('alert', function () {\n    return {\n      main: function (_title, _message, _onok) {\n        var title, message, onok;\n        switch (arguments.length) {\n          case 1:\n            message = _title;\n            break;\n          case 2:\n            if (typeof _message === 'function') {\n              message = _title;\n              onok = _message;\n            } else {\n              title = _title;\n              message = _message;\n            }\n            break;\n          case 3:\n            title = _title;\n            message = _message;\n            onok = _onok;\n            break;\n        }\n        this.set('title', title);\n        this.set('message', message);\n        this.set('onok', onok);\n        return this;\n      },\n      setup: function () {\n        return {\n          buttons: [{\n            text: alertify.defaults.glossary.ok,\n            key: keys.ESC,\n            invokeOnClose: true,\n            className: alertify.defaults.theme.ok\n          }],\n          focus: {\n            element: 0,\n            select: false\n          },\n          options: {\n            maximizable: false,\n            resizable: false\n          }\n        };\n      },\n      build: function () {\n        // nothing\n      },\n      prepare: function () {\n        //nothing\n      },\n      setMessage: function (message) {\n        this.setContent(message);\n      },\n      settings: {\n        message: undefined,\n        onok: undefined,\n        label: undefined\n      },\n      settingUpdated: function (key, oldValue, newValue) {\n        switch (key) {\n          case 'message':\n            this.setMessage(newValue);\n            break;\n          case 'label':\n            if (this.__internal.buttons[0].element) {\n              this.__internal.buttons[0].element.innerHTML = newValue;\n            }\n            break;\n        }\n      },\n      callback: function (closeEvent) {\n        if (typeof this.get('onok') === 'function') {\n          var returnValue = this.get('onok').call(this, closeEvent);\n          if (typeof returnValue !== 'undefined') {\n            closeEvent.cancel = !returnValue;\n          }\n        }\n      }\n    };\n  });\n  /**\r\n   * Confirm dialog object\r\n   *\r\n   *\talertify.confirm(message);\r\n   *\talertify.confirm(message, onok);\r\n   *\talertify.confirm(message, onok, oncancel);\r\n   *\talertify.confirm(title, message, onok, oncancel);\r\n   */\n  alertify.dialog('confirm', function () {\n    var autoConfirm = {\n      timer: null,\n      index: null,\n      text: null,\n      duration: null,\n      task: function (event, self) {\n        if (self.isOpen()) {\n          self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\n          autoConfirm.duration -= 1;\n          if (autoConfirm.duration === -1) {\n            clearAutoConfirm(self);\n            var button = self.__internal.buttons[autoConfirm.index];\n            var closeEvent = createCloseEvent(autoConfirm.index, button);\n            if (typeof self.callback === 'function') {\n              self.callback.apply(self, [closeEvent]);\n            }\n            //close the dialog.\n            if (closeEvent.close !== false) {\n              self.close();\n            }\n          }\n        } else {\n          clearAutoConfirm(self);\n        }\n      }\n    };\n    function clearAutoConfirm(self) {\n      if (autoConfirm.timer !== null) {\n        clearInterval(autoConfirm.timer);\n        autoConfirm.timer = null;\n        self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\n      }\n    }\n    function startAutoConfirm(self, index, duration) {\n      clearAutoConfirm(self);\n      autoConfirm.duration = duration;\n      autoConfirm.index = index;\n      autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\n      autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\n      autoConfirm.task(null, self);\n    }\n    return {\n      main: function (_title, _message, _onok, _oncancel) {\n        var title, message, onok, oncancel;\n        switch (arguments.length) {\n          case 1:\n            message = _title;\n            break;\n          case 2:\n            message = _title;\n            onok = _message;\n            break;\n          case 3:\n            message = _title;\n            onok = _message;\n            oncancel = _onok;\n            break;\n          case 4:\n            title = _title;\n            message = _message;\n            onok = _onok;\n            oncancel = _oncancel;\n            break;\n        }\n        this.set('title', title);\n        this.set('message', message);\n        this.set('onok', onok);\n        this.set('oncancel', oncancel);\n        return this;\n      },\n      setup: function () {\n        return {\n          buttons: [{\n            text: alertify.defaults.glossary.ok,\n            key: keys.ENTER,\n            className: alertify.defaults.theme.ok\n          }, {\n            text: alertify.defaults.glossary.cancel,\n            key: keys.ESC,\n            invokeOnClose: true,\n            className: alertify.defaults.theme.cancel\n          }],\n          focus: {\n            element: 0,\n            select: false\n          },\n          options: {\n            maximizable: false,\n            resizable: false\n          }\n        };\n      },\n      build: function () {\n        //nothing\n      },\n      prepare: function () {\n        //nothing\n      },\n      setMessage: function (message) {\n        this.setContent(message);\n      },\n      settings: {\n        message: null,\n        labels: null,\n        onok: null,\n        oncancel: null,\n        defaultFocus: null,\n        reverseButtons: null\n      },\n      settingUpdated: function (key, oldValue, newValue) {\n        switch (key) {\n          case 'message':\n            this.setMessage(newValue);\n            break;\n          case 'labels':\n            if ('ok' in newValue && this.__internal.buttons[0].element) {\n              this.__internal.buttons[0].text = newValue.ok;\n              this.__internal.buttons[0].element.innerHTML = newValue.ok;\n            }\n            if ('cancel' in newValue && this.__internal.buttons[1].element) {\n              this.__internal.buttons[1].text = newValue.cancel;\n              this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n            }\n            break;\n          case 'reverseButtons':\n            if (newValue === true) {\n              this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n            } else {\n              this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n            }\n            break;\n          case 'defaultFocus':\n            this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\n            break;\n        }\n      },\n      callback: function (closeEvent) {\n        clearAutoConfirm(this);\n        var returnValue;\n        switch (closeEvent.index) {\n          case 0:\n            if (typeof this.get('onok') === 'function') {\n              returnValue = this.get('onok').call(this, closeEvent);\n              if (typeof returnValue !== 'undefined') {\n                closeEvent.cancel = !returnValue;\n              }\n            }\n            break;\n          case 1:\n            if (typeof this.get('oncancel') === 'function') {\n              returnValue = this.get('oncancel').call(this, closeEvent);\n              if (typeof returnValue !== 'undefined') {\n                closeEvent.cancel = !returnValue;\n              }\n            }\n            break;\n        }\n      },\n      autoOk: function (duration) {\n        startAutoConfirm(this, 0, duration);\n        return this;\n      },\n      autoCancel: function (duration) {\n        startAutoConfirm(this, 1, duration);\n        return this;\n      }\n    };\n  });\n  /**\r\n   * Prompt dialog object\r\n   *\r\n   * invoked by:\r\n   *\talertify.prompt(message);\r\n   *\talertify.prompt(message, value);\r\n   *\talertify.prompt(message, value, onok);\r\n   *\talertify.prompt(message, value, onok, oncancel);\r\n   *\talertify.prompt(title, message, value, onok, oncancel);\r\n   */\n  alertify.dialog('prompt', function () {\n    var input = document.createElement('INPUT');\n    var p = document.createElement('P');\n    return {\n      main: function (_title, _message, _value, _onok, _oncancel) {\n        var title, message, value, onok, oncancel;\n        switch (arguments.length) {\n          case 1:\n            message = _title;\n            break;\n          case 2:\n            message = _title;\n            value = _message;\n            break;\n          case 3:\n            message = _title;\n            value = _message;\n            onok = _value;\n            break;\n          case 4:\n            message = _title;\n            value = _message;\n            onok = _value;\n            oncancel = _onok;\n            break;\n          case 5:\n            title = _title;\n            message = _message;\n            value = _value;\n            onok = _onok;\n            oncancel = _oncancel;\n            break;\n        }\n        this.set('title', title);\n        this.set('message', message);\n        this.set('value', value);\n        this.set('onok', onok);\n        this.set('oncancel', oncancel);\n        return this;\n      },\n      setup: function () {\n        return {\n          buttons: [{\n            text: alertify.defaults.glossary.ok,\n            key: keys.ENTER,\n            className: alertify.defaults.theme.ok\n          }, {\n            text: alertify.defaults.glossary.cancel,\n            key: keys.ESC,\n            invokeOnClose: true,\n            className: alertify.defaults.theme.cancel\n          }],\n          focus: {\n            element: input,\n            select: true\n          },\n          options: {\n            maximizable: false,\n            resizable: false\n          }\n        };\n      },\n      build: function () {\n        input.className = alertify.defaults.theme.input;\n        input.setAttribute('type', 'text');\n        input.value = this.get('value');\n        this.elements.content.appendChild(p);\n        this.elements.content.appendChild(input);\n      },\n      prepare: function () {\n        //nothing\n      },\n      setMessage: function (message) {\n        if (isString(message)) {\n          clearContents(p);\n          p.innerHTML = message;\n        } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\n          clearContents(p);\n          p.appendChild(message);\n        }\n      },\n      settings: {\n        message: undefined,\n        labels: undefined,\n        onok: undefined,\n        oncancel: undefined,\n        value: '',\n        type: 'text',\n        reverseButtons: undefined\n      },\n      settingUpdated: function (key, oldValue, newValue) {\n        switch (key) {\n          case 'message':\n            this.setMessage(newValue);\n            break;\n          case 'value':\n            input.value = newValue;\n            break;\n          case 'type':\n            switch (newValue) {\n              case 'text':\n              case 'color':\n              case 'date':\n              case 'datetime-local':\n              case 'email':\n              case 'month':\n              case 'number':\n              case 'password':\n              case 'search':\n              case 'tel':\n              case 'time':\n              case 'week':\n                input.type = newValue;\n                break;\n              default:\n                input.type = 'text';\n                break;\n            }\n            break;\n          case 'labels':\n            if (newValue.ok && this.__internal.buttons[0].element) {\n              this.__internal.buttons[0].element.innerHTML = newValue.ok;\n            }\n            if (newValue.cancel && this.__internal.buttons[1].element) {\n              this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n            }\n            break;\n          case 'reverseButtons':\n            if (newValue === true) {\n              this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n            } else {\n              this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n            }\n            break;\n        }\n      },\n      callback: function (closeEvent) {\n        var returnValue;\n        switch (closeEvent.index) {\n          case 0:\n            this.settings.value = input.value;\n            if (typeof this.get('onok') === 'function') {\n              returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\n              if (typeof returnValue !== 'undefined') {\n                closeEvent.cancel = !returnValue;\n              }\n            }\n            break;\n          case 1:\n            if (typeof this.get('oncancel') === 'function') {\n              returnValue = this.get('oncancel').call(this, closeEvent);\n              if (typeof returnValue !== 'undefined') {\n                closeEvent.cancel = !returnValue;\n              }\n            }\n            if (!closeEvent.cancel) {\n              input.value = this.settings.value;\n            }\n            break;\n        }\n      }\n    };\n  });\n\n  // CommonJS\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = alertify;\n    // AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return alertify;\n    });\n    // window\n  } else if (!window.alertify) {\n    window.alertify = alertify;\n  }\n})(typeof window !== 'undefined' ? window : this);"],
  "mappings": "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",
  "names": ["window", "top", "initialize", "dialog"]
}
