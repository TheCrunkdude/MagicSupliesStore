
trigger:
- main

pool:
  name: Default 

variables:
  DOTNET_VERSION: '7.0.x'
  EC2_HOST: '44.210.121.232'  # Reemplaza con tu IP p√∫blica de EC2
  EC2_USERNAME: 'Administrator'
  API_PATH: 'C:\Users\Administrator\Documents\SSHDestination'
steps:
- script: dir $(Build.SourcesDirectory) -Recurse
  displayName: 'üìÇ Verificar estructura de archivos'

# 2Ô∏è‚É£ Restaurar dependencias y compilar
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'MagicstoreAPI/MagicstoreAPI/MagicstoreAPI.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: 'MagicstoreAPI/MagicstoreAPI/MagicstoreAPI.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/api'

# 3Ô∏è‚É£ Descargar los artefactos de publicaci√≥n
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/api'
    artifactName: 'api'

# 4Ô∏è‚É£ Copiar archivos a EC2 por SSH
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'EC2-Windows-SSH'  # Nombre de tu conexi√≥n SSH en Azure DevOps
    sourceFolder: '$(Build.ArtifactStagingDirectory)/api'
    targetFolder: 'C:\Users\Administrator\Documents\SSHDestination'
    cleanTargetFolder: false  # üîπ Evita que intente limpiar con "sh"
- task: AWSPowerShellModuleScript@1
  inputs:
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: |
      # You can write your powershell script inline here (the AWSPowerShell module will be imported automatically).
      
      -ExecutionPolicy Bypass -Command \& { 
        if (Test-Path 'C:\Users\Administrator\Documents\SSHDestination\api.zip') { 
          Expand-Archive -Path 'C:\Users\Administrator\Documents\SSHDestination\api.zip' -DestinationPath 'C:\Users\Administrator\Documents\publish' -Force;
          Remove-Item 'C:\Users\Administrator\Documents\SSHDestination\api.zip' -Force
        } else { 
          Write-Host 'No se encontr√≥ el archivo ZIP' 
        }
      }\""