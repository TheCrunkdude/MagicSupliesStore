
trigger:
- main

pool:
  name: Default 

variables:
  DOTNET_VERSION: '7.0.x'
  EC2_HOST: '44.210.121.232'  # Reemplaza con tu IP p√∫blica de EC2
  EC2_USERNAME: 'Administrator'
  API_PATH: 'C:\Users\Administrator\Documents\SSHDestination'
steps:
- script: dir $(Build.SourcesDirectory) -Recurse
  displayName: 'üìÇ Verificar estructura de archivos'

# 2Ô∏è‚É£ Restaurar dependencias y compilar
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'MagicstoreAPI/MagicstoreAPI/MagicstoreAPI.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: 'MagicstoreAPI/MagicstoreAPI/MagicstoreAPI.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/api'

# 3Ô∏è‚É£ Descargar los artefactos de publicaci√≥n
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/api'
    artifactName: 'api'

# 4Ô∏è‚É£ Copiar archivos a EC2 por SSH
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'EC2-Windows-SSH'  # Nombre de tu conexi√≥n SSH en Azure DevOps
    sourceFolder: '$(Build.ArtifactStagingDirectory)/api'
    targetFolder: 'C:\Users\Administrator\Documents\SSHDestination'
    cleanTargetFolder: false  # üîπ Evita que intente limpiar con "sh"
    
- task: SSH@0
  inputs:
    sshEndpoint: 'EC2-Windows-SSH'
    runOptions: 'inline'
    inline: |
      "C:\Program Files\Git\bin\bash.exe" -c "unzip -o /c/Users/Administrator/Documents/SSHDestination/MagicstoreAPI.zip -d /c/Users/Administrator/Documents/publish && rm /c/Users/Administrator/Documents/SSHDestination/MagicstoreAPI.zip"


